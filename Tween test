
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FloatGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 160, 0, 50)
button.Position = UDim2.new(1, -180, 0, 20)
button.Text = "Float"
button.BackgroundColor3 = Color3.fromRGB(50, 150, 255)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 20
button.Parent = screenGui

-- Variáveis do personagem
local character, humanoid, rootPart

local function bindCharacter(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
end

if player.Character then
    bindCharacter(player.Character)
end
player.CharacterAdded:Connect(bindCharacter)

local flutuando = false
local bodyPos, bodyGyro, bodyVel

local function startFlutuar()
    if not rootPart or not humanoid then return end
    flutuando = true
    button.Text = "Parar Float"

    local altura = rootPart.Position.Y
    local velocidade = 38
    local amplitude = 0.3
    local velocidadeOscilacao = 2
    local antiKickAmplitude = 0.2

    -- BodyPosition para altura
    bodyPos = Instance.new("BodyPosition")
    bodyPos.MaxForce = Vector3.new(0,1e6,0)
    bodyPos.P = 1e5
    bodyPos.D = 1e4
    bodyPos.Position = Vector3.new(rootPart.Position.X, altura, rootPart.Position.Z)
    bodyPos.Parent = rootPart

    -- BodyGyro para orientação
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(1e6,1e6,1e6)
    bodyGyro.P = 1e5
    bodyGyro.CFrame = rootPart.CFrame
    bodyGyro.Parent = rootPart

    -- BodyVelocity para movimento horizontal
    bodyVel = Instance.new("BodyVelocity")
    bodyVel.MaxForce = Vector3.new(1e6,0,1e6)
    bodyVel.Velocity = Vector3.new(0,0,0)
    bodyVel.Parent = rootPart

    humanoid.PlatformStand = true
    humanoid.AutoRotate = false

    local t0 = tick()
    local conn
    conn = RunService.RenderStepped:Connect(function(delta)
        if not flutuando then
            conn:Disconnect()
            bodyPos:Destroy()
            bodyGyro:Destroy()
            bodyVel:Destroy()
            humanoid.PlatformStand = false
            humanoid.AutoRotate = true
            return
        end

        -- Direção horizontal da câmera
        local frente = camera.CFrame.LookVector
        local moveDir = Vector3.new(frente.X,0,frente.Z)
        if moveDir.Magnitude > 0 then
            moveDir = moveDir.Unit
        end

        -- Anti-kick reforçado: pequena oscilação horizontal
        local xOffset = math.sin(tick()*1.5) * antiKickAmplitude
        local zOffset = math.cos(tick()*1.7) * antiKickAmplitude
        bodyVel.Velocity = (moveDir * velocidade) + Vector3.new(xOffset,0,zOffset)

        -- Oscilação vertical
        local yOffset = math.sin((tick()-t0)*velocidadeOscilacao) * amplitude
        bodyPos.Position = Vector3.new(rootPart.Position.X, altura + yOffset, rootPart.Position.Z)

        -- Orientação
        bodyGyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + moveDir)
    end)
end

button.MouseButton1Click:Connect(function()
    if flutuando then
        flutuando = false
        button.Text = "Float"
    else
        startFlutuar()
    end
end)
